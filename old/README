systraykeys
~rts/oarion7

           #### ####  #### ####     ##   ###   ###   ##  #   #  ###  ####
           #    #   # #    #       #  # #     #     #  # ##  # #     #   
           ###  ####  ###  ###     ####  ###   ###  #### # # # #  ## ### 
           #    # #   #    #       #  #     #     # #  # #  ## #   # #   
           #    #  ## #### ####    #  # ####  ####  #  # #   #  ###  ####

# Displays a numbered hint widget next to each systray icon to allow use of the systray
# via the keyboard. Uses a hidden rofi instance as the keygrabber to simulate clicking.
# Uses mouse.coords, iocane, and xdotool to simulate mouse actions because the dude who
# wrote this is crazy, and his other personalities don't know anything about computers.

# https://github.com/TrilbyWhite/Iocane

# Defaults to right-click mode. Left-click & hover via Ctrl+L & Ctrl-O, respectively.

# Tested with awesome v4.3

Displays a number hint widget next to each systray icon. The number entered on the keyboard sends a right click to the corresponding icon unless Ctrl+L (i.e. Left) is pressed first. Ctrl+O will do the same for a "hovering" functionality, but it is less reliable. Two lines calling the mouse_location function serve to save and then restore the original pointer coordinates

Uses "awesome-client" to interact with the included lua files which are actually sourceable declarations of bash functions. Some global variables and functions were therefore necessary. Note that awesome-client does not print the results of a return statement to the terminal if that return statement is written inside a function that is called. Also, when editing those files, one must be careful to avoid single quotes when possible, or appropriately "escape" them like '"'"'this'"'"'.

Uses rofi as temporary key grabber by calling it with the -auto-select flag so that hitting "return" is never necessary unless there are more than 9 systray icons. Because the menu options are all displayed in the widget, visibility of rofi is redundant. An "invisible" theme has been provided and enabled in-line, and assumes a compositor is running. This proved more reliable for us in our tests than enabling rofi's -normal-window mode and attempting to hide the window in rules.

Alternative routes for future re-writes: not using 3 separate programs for mouse actions (mouse.coords, iocane, xdotool); just doing the whole damn thing in lua without bash; figure out how to temporarily grab keys in awesome natively instead of using rofi at all (seems perfectly doable, but maybe convoluted), or finally, instead of using widgets for hints and obscuring rofi, one might elect simply to configure rofi to display options with fixed widths, preferably without moving them around while multi-digit numbers are typed.

We have been using the following function in global keys to make this as seamless as possible in our environment, where incidentally the systray is hidden by default until needed.

    awful.key({ modkey }, "s", function ()
        local s
        awful.screen.connect_for_each_screen(
            function(screen) if screen.systray then s = screen end 
        end)
        if not s.systray.visible then 
                s.systray.visible = true 
                gears.timer.delayed_call(function() awful.util.spawn("/path/to/script/systraykeys/systraykeys.sh") end) 
        else
                s.systray.visible = false
        end
    end, {description="toggle system tray", group="awesome"}),

Here one key combination is used to hide the systray if it is visible, or if not, to display the systray along with the number hints. Sometimes one may wish only to see what is running in the systray rather than actually click on anything in it, immediately pressing the same key combination to hide it. However, "Super+S" will never be received by the window manager when rofi (in its normal, non-windowed state) is in use. The "exit_key" variable, which should be assigned a single letter as its value, is added by the script to the list of valid options, which are themselves all numbers. The default value is "s" to pair with "Super+S". If we hit Super+S while rofi is active, rofi will read it as simply "s", which later triggers the script to clear the value. This allows us to hit the same combination key to cancel/hide the systray and hints as we do to display them. To disable this, exit_key can be set to null or simply commented out.
